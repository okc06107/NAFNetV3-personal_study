name: NAFNetV2
model_type: ImageRestorationModel
scale: 1
num_gpu: !!int {{_num_gpu}}
manual_seed: 10

datasets:
  train:
    name: SIDD
    type: PairedImageRawDataset
    dataroot_gt: /data1/SIDD_raw/train/gt_raw_crops_lmdb
    dataroot_lq: /data1/SIDD_raw/train/lq_raw_crops_lmdb

    filename_tmpl: '{}'
    io_backend:
      type: lmdb
    
    gt_size: 256
    use_flip: false
    use_rot: false

    # data loader
    use_shuffle: true
    num_worker_per_gpu: !!int {{_num_worker_per_gpu}}
    batch_size_per_gpu: !!int {{_batch_size_per_gpu}}
    dataset_enlarge_ratio: 1
    prefetch_mode: ~
  
  val: 
    name: SIDD_val
    type: PairedImageRawDataset
    dataroot_gt: /data1/SIDD_raw/valid/valid_gt_raw_crops
    dataroot_lq: /data1/SIDD_raw/valid/valid_lq_raw_crops
    io_backend:
      type: disk

network_g:
  type: NAFNetv2
  ch: !!int {{ch}}
  sc0: !!int {{sc0}}
  sc1: 0
  rate_mid: 0.16
  middle_blk_num: !!int {{mid}}

path:
  pretrain_network_g: ~
  strict_load_g: true
  resume_state: ~

train:
  # optim_g: 
  #   type: AdamW
  #   lr: !!float 5e-4
  #   weight_decay: 0.
    # betas: []
  optim_g:
    type: AdamW
    lr: !!float 1e-3
    weight_decay: 0.
    betas: [0.9, 0.9]
  
  scheduler:
    # type: LinearLR
    # start_factor: 1.
    # end_factor: 0.1
    type: TrueCosineAnnealingLR
    T_max: 200000
    eta_min: !!float 1e-7
  
  # total_iter: !!float 5e5
  # total_iter: !!float 1e5
  total_iter: 200000
  warmup_iter: -1

  # losses
  pixel_opt:
    type: PSNRLoss
    loss_weight: 1
    reduction: mean
  
val:
  val_freq: !!float 5e3
  save_img: false
  use_img: false

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 0
      test_y_channel: false
    ssim:
      type: calculate_ssim
      crop_border: 0
      test_y_channel: false


# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 2e4
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29501